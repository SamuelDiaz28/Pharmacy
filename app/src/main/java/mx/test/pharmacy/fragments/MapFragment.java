package mx.test.pharmacy.fragments;

import android.Manifest;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.Typeface;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.AsyncTask;
import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.app.ActivityCompat;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapView;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.CameraPosition;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.android.material.bottomsheet.BottomSheetDialog;
import com.google.android.material.bottomsheet.BottomSheetDialogFragment;
import com.google.android.material.floatingactionbutton.FloatingActionButton;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import mx.test.pharmacy.R;
import mx.test.pharmacy.adapters.ListFarmaciaPrecDistAdapter;
import mx.test.pharmacy.adapters.ListMedicineAdapter;
import mx.test.pharmacy.models.Imagenes;
import mx.test.pharmacy.models.ListCompraUsuario;
import mx.test.pharmacy.models.ListElementMedicine;
import mx.test.pharmacy.models.ListFarmaciaPrecDist;
import mx.test.pharmacy.models.ListMedicamentoShow;
import mx.test.pharmacy.models.Medicament;
import mx.test.pharmacy.roomData.AppDatabase;
import mx.test.pharmacy.roomData.entities.Medicines;
import mx.test.pharmacy.util.ComunMethod;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link MapFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class MapFragment extends Fragment implements OnMapReadyCallback, View.OnClickListener , LocationListener {

    //LISTA MEDICAMENTOS Y FARMACIAS
    public String pirquet ="";
    public String buscapina="";
    public String arcoxia = "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W8+Kr8+asZVUlkEFTkiHNfkUo463P4e5UEGAgEHDpNa6L3DEB6PmhYYq9GaOjEtsEeWFnL4weLJL9gsEzpiOtADWqx9Rm6dGlSslM1/gDVlSj3lSpfbY8HR4ckBsveU03U+sNmlUVGMwfmCgsWhpbFzaRNjlMygLWVVzW266iavgzOMuM4SklIUwePN6hNmv1tLtxStrGIxBlfkKlfAmRuk17epYBXhNNcToP7YXNEKCdEStwPEOJLz2lZTjzki3GhaVtOffLwKm+VZvfUQVjkjoLxF3e20vFIQamNGY1QL8QdIbLnRBSnMrx8piABdKd/FS5pPwkcQtYvqP2wjlIdSiXVOSoLiXntKSnH8AMiciJuaQyoPiWh28VH8ijj/Jv//aAAwDAQACAAMAAAAQ888888888888888888888888888888888888888888888888880843z3pQ387w2ya2wYUwTrQ7qJlFHcfAtVtJ8d+CRtlWbqDHNs3j+Bk/F9mzQlNBBxwpRg57VhlRJx9AcxlWv82MFVV9R8/LVX2Ms9SVxpQINcs88888M4MMs888888888888888888888888888888888888888888888888888888//EACYRAAMAAgECBAcAAAAAAAAAAAABESExIBCBQVGR8DBQYGFxscH/2gAIAQMBAT8Q+aQhCE6J0RCEJ0pSlHA1Q0TwiCopwxkVtKpa28+QjuqfNbURUTkJWoXWJUTTW/v6ihgSLyDKMiUmY+X5FxvFcGVQSSwiyw2YBjJBjV8HJENDd4iOVmpp7/pln20Xw5eGme/RV9hTScx/Xnuo+4hoZbEkSLpGF5VKSvN5WfQf/8QAIBEAAwACAgEFAAAAAAAAAAAAAAERECEgMTBBUFFgYf/aAAgBAgEBPxD3SlKXJVhlZWUuIRkILCjqNTLHcfQ3ahrk02QfkWafBy12PYhOC1iVEFh2WfQReTbG4sfMUZBROrxE72RcCao+aihpUsq8LLhKoagup9J//8QAKRABAAIBAwQCAgIDAQEAAAAAAQARITFBURBhcYGRobHB0eEgQHAw8P/aAAgBAQABPxD/AKS64PLP2RmeofUw/wCgoaoTVh9zVvTA6N8Kbheqhmp7Ztg8sbojxaJauMESr5dTKtK5TEaX0ZhkMJLW6O1xtXgj/UMyHlT4h9Pmfxn5+SSt96H8y8FnTS/7nNPAwenojdbzRF9A8w6QPliPxIeHdo64wFm1e7KLovDdwVoMaFXfoirtr3mKqQEtvieZ3ibJ8wQtA7xG49S5yBKN6V7L5ZQVTxK9a9sEoAnIPqUq3M/Kmp4lJEAasd4HyIzGgV7h2w+yswUVXzE3C85f3ATNnNRBpscTULO7cK8x3VV3SHMwHVvgmN1+Y7y+oKsltsRfMe6DGQBjmL7h6iK8CP2o2AwOwh7TX2OjzFxH8hPyJqeITDhdveyCWBVobsHh1Jl0B2gDb7gho/Et2jbXP+AegwuIzM9wY/mlzFdPyjOxG3gb6D5J+ZNTxEphgDhjMJUmyZWuR5kUCCslzhqARq6YBp75iJglHYNZdiAQqjNs77eI9kHUUSh3rJMYcV2DDjGK2xbEJVEkLFwwEYovEXMWXiXL6aYDu1E2rnjL8SifBM/NRoXsKn6n2oHYEIqEsviDdD0TeL9QZbPliRYtwxUQSiAYz9k1PEVrgjuf/GKy4qVrDjA0+wTVA0XzpHInW4ORwx1BzUjiqJgIM6RSukPgbBsREPhKAlL15+ggPKkNDgDaXafMv6l2afej9yxx5i/gmXaq3r5lup8V+ku/PX7mgr0hjTB0CUVqloitO15mKa4MDoKl7BDfhja2y00vKfSYQwFm2YUEgCOEd47D4hQAxqsvWriIuGzLU007Spm9eoutmrp1ZRPlGfiXO6WiW4LZZRd4oRel8X3qUCill8MlZqacx1N/8M2E2u0umsQx7RPUhsvaO0FK4bbc0UKKbZ5ldalTeVHZV0VkytSUtd8byxIrwEUr4Daa/aXGaBmj5T6DH0mBmNa/jqAANoRi72MNm+ZrVTK94VaCsFpYlBV32gGSTSeHAtVfFwZNH1EKTopt7iTgbmSCutAB33hTa6QYILhoc8wWgkhvCgbalkdtUUkWJZqtWtav+FdK6Y2c5VxxxcvBK4fLuyoCjVaCYpZ359zR8p9djVVOQ5O3QYN+RJlaBpB8tU0zKHy+ByM3PRwusaxRrQBdejjGniDMTBKTDR38FTECkwDSlmHQlR6VK6VKnAK+5UyzVfXSsRAHRKlbwjl4ikABze8qDuz67CydK6e0GGJFs2uldWNjN8HtNgqzQeAgh2CjszCRGLyY1nuQP8AlSpUrpUqBGC2XAqpO8oFqmnMXcLzmL4eCMQtbzKoIfkmh5Z9FhQttQVsL+Y83SOghtcZglSMi276jTwtUpvxtHpUqVK6VKlZlSulYlT5LovXbKFGZTOTg8xJbVzc0fLPrsxJ8iNEHyQUdykW+hhObuCCCCdKlSoEqVKlSo1aUX1qrO7Li3gDelbH8RJGqKLviopatBtGulXqd581KzKA6mjxG/RckW0ji8wQBANiG/bAgCASss+2hTRedrubmkRSa5JoCswQ112ug8s0tZHeJAlSpUqHQqVKl0xdkEVttqfcaikkFfQ72P1L10u2uB1fhmDKmXGnBvLAsYHlE/pg+tEOX0hv2wHZADQrp9dljDaVlwc4zXNRDRTbyxEgoJjWkpK90P5RexS2ByA0PaZoLRaIMaoMh+mMxM1CaLk9/1L8miq2i1QeWIha7BvRqVKlSpUsriWJlOLg273N0hDcTAf5QA0A/8EsR0ZkczjeUoUboVb3iRKVcgOFh02zW5wTBNXReI5patdGl/wBREUagxpO7cpQAGG5Zgl9Vd41dHJVYjRfEH1A9w5/CA62wHQf6A2t33im52YcS/diyUNGMTLARO6G8hBNUwLa/MA0A9f7CzaL5qVWn/TP/2Q==";
    public String colchicinaAurax = "";
    public String melatoninaAurax ="";
    private List<ListMedicamentoShow> listMedicamentoShowsPrecargados;
    private List<ListMedicamentoShow> listMedicamentoShows;
    private List<ListCompraUsuario> listCompraUsuarios;
    private RecyclerView recyclerView;
    private List<ListFarmaciaPrecDist> elementMedicines;
    private ListFarmaciaPrecDistAdapter listFarmaciaPrecDistAdapter;

    //MAPAS
    private Marker marker1,marker2,marker3;
    private View rootView;
    private MapView mapView;
    private GoogleMap mMap;
    private FloatingActionButton fab;
    Map<String, Integer> mMarkers = new HashMap<String, Integer>();
    boolean doubleClick = false;

    private LocationManager locationManager;
    private Location currentLocation;

    private Marker marker;
    private CameraPosition camara;
    Fragment currentFragment;
    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    private ComunMethod commonMethods = new ComunMethod();

    public MapFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment MapFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static MapFragment newInstance(String param1, String param2) {
        MapFragment fragment = new MapFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment

        rootView = inflater.inflate(R.layout.fragment_map, container, false);

        fab = rootView.findViewById(R.id.fload);

        elementMedicines = new ArrayList<>();
        listCompraUsuarios = new ArrayList<>();
        listMedicamentoShows = new ArrayList<>();
        listMedicamentoShowsPrecargados = new ArrayList<>();
        cargarFarmacias();
        cargarListaUsuario();
        new GetData().execute();

        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //Toast.makeText(getContext(), "Atras " , Toast.LENGTH_SHORT).show();
                toggleBottomSheet();

            }
        });

        return rootView;
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        mapView = (MapView) rootView.findViewById(R.id.mapf);
        if (mapView != null) {
            mapView.onCreate(null);
            mapView.onResume();
            mapView.getMapAsync(this);
        }

    }

    @Override
    public void onResume() {
        super.onResume();

    }


    @Override
    public void onMapReady(@NonNull GoogleMap googleMap) {
        mMap = googleMap;
        locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);

        if (ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&
                ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {

            return;
        }

        mMap.setMyLocationEnabled(true);
        mMap.getUiSettings().setMyLocationButtonEnabled(true);


        locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 1, 0,  this);
        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,1,0,this);

        Location location = locationManager.getLastKnownLocation(locationManager.GPS_PROVIDER);
        if (location == null){
            location = locationManager.getLastKnownLocation(locationManager.NETWORK_PROVIDER);
        }
        currentLocation = location;

        while (currentLocation == null){
            locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 1, 0,  this);
            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,1,0,this);

            location = locationManager.getLastKnownLocation(locationManager.GPS_PROVIDER);
            if (location == null){
                location = locationManager.getLastKnownLocation(locationManager.NETWORK_PROVIDER);
            }
            currentLocation = location;
        }
        zoomToLocation(currentLocation);

        int height = 100;
        int width = 100;

        BitmapDrawable bitmapdraw = (BitmapDrawable)getResources().getDrawable(R.drawable.icfarmacia);
        Bitmap b = bitmapdraw.getBitmap();
        Bitmap smallMarker = Bitmap.createScaledBitmap(b, width, height, false);

        BitmapDrawable bitmapdraw1 = (BitmapDrawable)getResources().getDrawable(R.drawable.icfarmacia);
        b = bitmapdraw1.getBitmap();
        Bitmap smallMarker1 = Bitmap.createScaledBitmap(b, width, height, false);

        BitmapDrawable bitmapdraw2 = (BitmapDrawable)getResources().getDrawable(R.drawable.icfarmacia);
        b = bitmapdraw2.getBitmap();
        Bitmap smallMarker2 = Bitmap.createScaledBitmap(b, width, height, false);

        BitmapDrawable bitmapdraw3 = (BitmapDrawable)getResources().getDrawable(R.drawable.icfarmacia);
        b = bitmapdraw3.getBitmap();
        Bitmap smallMarker3 = Bitmap.createScaledBitmap(b, width, height, false);

        BitmapDrawable bitmapdraw4 = (BitmapDrawable)getResources().getDrawable(R.drawable.icfarmacia);
        b = bitmapdraw4.getBitmap();
        Bitmap smallMarker4 = Bitmap.createScaledBitmap(b, width, height, false);

        LatLng miUbicacion = new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude());
        mMap.addMarker(new MarkerOptions().position(miUbicacion).title("Ubicación actual"));
        mMap.moveCamera(CameraUpdateFactory.newLatLng(miUbicacion));
        CameraPosition cameraPosition = new CameraPosition.Builder()
                .target(miUbicacion)
                .zoom(15)
                .bearing(90)
                .tilt(45)
                .build();
        mMap.animateCamera(CameraUpdateFactory.newCameraPosition(cameraPosition));

        LatLng farma = new LatLng(location.getLatitude()-0.00192, location.getLongitude()+0.003);
        LatLng farma1 = new LatLng(location.getLatitude()+0.00291, location.getLongitude()+0.0028);
        LatLng farma2 = new LatLng(location.getLatitude()+0.00392, location.getLongitude()-0.00112);
        LatLng farma3 = new LatLng(location.getLatitude()+0.00234, location.getLongitude()-0.0049);
        LatLng farma4 = new LatLng(location.getLatitude()+0.00000003, location.getLongitude()-0.0043);

        MarkerOptions marcador1 = new MarkerOptions()
                .position(farma)
                .title("Farmacia Ahora")
                .snippet("Distancia: 1 km ")
                .icon(BitmapDescriptorFactory.fromBitmap(smallMarker));

        mMap.addMarker(marcador1);
        MarkerOptions marcador2 = new MarkerOptions()
                .position(farma1)
                .title("Farmacia Esp")
                .snippet("Distancia: 2 km ")
                .icon(BitmapDescriptorFactory.fromBitmap(smallMarker1));
        mMap.addMarker(marcador2);
        /*mMap.addMarker(new MarkerOptions()
                .position(farma1)
                .title("Farmacia Esp ")
                .snippet("Precio: 99.00 "+"\n"+"Tiempo de Entrega: 25 min")
                .icon(BitmapDescriptorFactory.fromBitmap(smallMarker1)));*/
        mMap.addMarker(new MarkerOptions()
                .position(farma2)
                .title("Farmacia San-Pa")
                .snippet("Distancia: 1.8 km")
                .icon(BitmapDescriptorFactory.fromBitmap(smallMarker2)));
                //.showInfoWindow();

        Marker farmaWalwart = mMap.addMarker(new MarkerOptions()
                .position(farma3)
                .title("Farmacia Walwart")
                .snippet("Distancia: 2.1 km")
                .icon(BitmapDescriptorFactory.fromBitmap(smallMarker3))
        );
        /*mMap.addMarker(new MarkerOptions()
                .position(farma3)
                .title("Farmacia Walwart ")
                .snippet("Precio: $110.00 "+"\n"+"Tiempo de Entrega: 15 min")
                .icon(BitmapDescriptorFactory.fromBitmap(smallMarker3)))
                .showInfoWindow();*/
        Marker farmaGua = mMap.addMarker(new MarkerOptions()
                .position(farma4)
                .title("Farmacia Gua")
                .snippet("Distancia: 3 km ")
                .icon(BitmapDescriptorFactory.fromBitmap(smallMarker4))
                .infoWindowAnchor(0.5f, 0.5f));
        /*mMap.addMarker(new MarkerOptions()
                .position(farma4)
                .title("Farmacia Gua ")
                .snippet("Precio: $60.00 "+"\n"+"Tiempo de Entrega: 55 min")
                .icon(BitmapDescriptorFactory.fromBitmap(smallMarker4)));*/

        /*mMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {
            @Override
            public boolean onMarkerClick(@NonNull Marker marker) {

                //Mandamos a traer el boottomSheet
                //toggleBottomSheet();
                if (marker.isInfoWindowShown()) {
                    marker.hideInfoWindow();
                } else {
                    marker.showInfoWindow();
                }
                return true;
            }
        });*/


        mMap.setInfoWindowAdapter(new GoogleMap.InfoWindowAdapter() {

            @Override
            public View getInfoWindow(Marker arg0) {
                return null;
            }

            @Override
            public View getInfoContents(Marker marker) {

                LinearLayout info = new LinearLayout(getContext());
                info.setOrientation(LinearLayout.VERTICAL);

                TextView title = new TextView(getContext());
                title.setTypeface(null, Typeface.BOLD);
                title.setText(marker.getTitle());

                TextView snippet = new TextView(getContext());
                snippet.setText(marker.getSnippet());

                info.addView(title);
                info.addView(snippet);
                info.isClickable();
                return info;
            }
        });
        mMap.setOnInfoWindowClickListener(new GoogleMap.OnInfoWindowClickListener() {
            @Override
            public void onInfoWindowClick(Marker arg0) {
                // TODO Auto-generated method stub
                String titulo = arg0.getTitle();
                String descripcion = "Av.Reforma #1090 , Col. Centro";
                String telefono ="555-555-5555";
                String precio ="$90";

                cargarListaUsuarioPrecargado();
                ComunMethod.showSuccessDialogShow(titulo,listCompraUsuarios, getActivity());

            }

        });
    }
    private void zoomToLocation(Location location){
        camara = new CameraPosition.Builder()
                .target(new LatLng(location.getLatitude(), location.getLongitude()))
                .zoom(15)
                .bearing(0)
                .tilt(30)
                .build();
        mMap.animateCamera(CameraUpdateFactory.newCameraPosition(camara));
    }

    @Override
    public void onLocationChanged(@NonNull Location location) {

    }

    @Override
    public void onClick(View v) {

    }

    public void toggleBottomSheet(){

        View view = getLayoutInflater().inflate(R.layout.fragment_bottom_sheet, null);
        recyclerView = view.findViewById(R.id.recyclerView_bootomshet);

        BottomSheetDialog dialog = new BottomSheetDialog(getActivity());
        //Button btnPago = view.findViewById(R.id.shetbotompagar);


       /* btnPago.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //ComunMethod.showSuccessDialog(titulo,telefono,precio,descripcion, getActivity());
            }
        });*/

        showList();
        dialog.setContentView(view);
        dialog.show();
    }

    private void showList(){
        listFarmaciaPrecDistAdapter = new ListFarmaciaPrecDistAdapter(elementMedicines, getContext());
        LinearLayoutManager li = new LinearLayoutManager(getContext());
        li.setOrientation(LinearLayoutManager.VERTICAL);

        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(li);
        recyclerView.setAdapter(listFarmaciaPrecDistAdapter);
    }

    private void cargarFarmacias(){
        elementMedicines.add(new ListFarmaciaPrecDist("Farmacia Ahora", "180.00", "1km"));
        elementMedicines.add(new ListFarmaciaPrecDist("Framacia Esp", "166.30", "2km"));
        elementMedicines.add(new ListFarmaciaPrecDist("Framacia San-Pa", "150.10", "1.8km"));
        elementMedicines.add(new ListFarmaciaPrecDist("Framacia Walwart", "132.50", "2.1km"));
        elementMedicines.add(new ListFarmaciaPrecDist("Framacia Gua", "100.99", "3km"));

    }
    private void cargarListaUsuario(){

        CargarMedicamentos();

        listCompraUsuarios.add(new ListCompraUsuario("Farmacia Ahora", "555-551-2453","Calle el Empleado #152 -A1, col.Vicente","180.00","180.00","1km",listMedicamentoShows));
        //listCompraUsuarios.add(new ListCompraUsuario("Farmacia Esp", "555-652-7845","Av. Insurgentes Sur #458 -1, Tlalpan","166.30","166.30","2km",listMedicamentoShows ));
        //listCompraUsuarios.add(new ListCompraUsuario("Farmacia San-Pa", "555-753-1594","Av. Ferrocarril #245, col.Centro","150.10","150.10","1.8km",listMedicamentoShows));
        //listCompraUsuarios.add(new ListCompraUsuario("Farmacia Walwart", "555-956-1236","Calle el Empleado #1, col.Vicente","132.50","132.50","2.1km",listMedicamentoShows));
        //listCompraUsuarios.add(new ListCompraUsuario("Farmacia Gua", "555-648-2789","Calle el Empleado #1, col.Vicente","100.99","100.99","3km",listMedicamentoShows));
    }
    private void cargarListaUsuarioPrecargado(){
        listCompraUsuarios.add(new ListCompraUsuario("Farmacia Esp", "555-652-7845","Av. Insurgentes Sur #458 -1, Tlalpan","166.30","166.30","2km",listMedicamentoShowsPrecargados ));
        listCompraUsuarios.add(new ListCompraUsuario("Farmacia San-Pa", "555-753-1594","Av. Ferrocarril #245, col.Centro","150.10","150.10","1.8km",listMedicamentoShowsPrecargados));
        listCompraUsuarios.add(new ListCompraUsuario("Farmacia Walwart", "555-956-1236","Calle el Empleado #1, col.Vicente","132.50","132.50","2.1km",listMedicamentoShowsPrecargados));
        listCompraUsuarios.add(new ListCompraUsuario("Farmacia Gua", "555-648-2789","Calle el Empleado #1, col.Vicente","100.99","100.99","3km",listMedicamentoShowsPrecargados));
    }

    private void CargarMedicamentos(){
        listMedicamentoShowsPrecargados.add(new ListMedicamentoShow("Pirquet","Adulto","Fexofenadina","Tabletas","180 mg","10 Tabletas(1 caja)","209.50",pirquet));
        listMedicamentoShowsPrecargados.add(new ListMedicamentoShow("Buscapina","Adulto","Hioscina/Metamizol","Tabletas","10 mg/250 mg","24 Tabletas","358.00",buscapina));
        listMedicamentoShowsPrecargados.add(new ListMedicamentoShow("Arcoxia","Adulto","Etoricoxib","Tabletas","90 mg","28 Tabletas","1829.00",arcoxia));
        listMedicamentoShowsPrecargados.add(new ListMedicamentoShow("Colchicina Aurax","Adulto","Colchicina","Tabletas","1 mg","30 Tabletas","51.50",colchicinaAurax));
        listMedicamentoShowsPrecargados.add(new ListMedicamentoShow("Melatonina Aurax","Adulto","Melatonina","Tabletas","5 mg","20 Tabletas","144.00",melatoninaAurax));
    }

    public class GetData extends AsyncTask<Void, Void, Boolean> {

        @Override
        protected Boolean doInBackground(Void... voids) {

            try {
                List<Medicines> medicinesList = AppDatabase.getInstance(getActivity().getApplicationContext()).medicinesDao().get();

                for (Medicines medicine : medicinesList) {
                    listMedicamentoShows.add(new ListMedicamentoShow(medicine.getName(),"Adulto","","",medicine.getGrammage(),"",medicine.getCost(),medicine.getImgMedicine()));
                }



                return true;
            } catch (Exception e) {

                Log.e("ObverseIdentifyFragment", "Error al almacenar reporte", e);
                return false;

            }
        }

        /*@Override
        protected void onPostExecute(Boolean ok) {
            Toast.makeText(getActivity(), ok ? "Datos almacenados" : "Ocurrio un error al intentar almacenar los datos", Toast.LENGTH_LONG).show();
            if (ok) {
                showList();
            }

        }*/
    }
}